from datetime import datetime
from os import getenv

from aiogram import Dispatcher, Bot, types
from aiogram.types import Message, CallbackQuery, InputFile
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State


from bot.database.methods.get import check_link, get_all_user_ids
from bot.database.methods.insert import create_user, insert_broadcast_stats, insert_poll_response, \
    update_poll_statistics, insert_quiz_stats
from bot.database.methods.update import upd_link, increment_button_counter
from bot.keyboards.inline import markup_lk, markup_competition, markup_link, faq_kb, shop_kb, problems_kb, \
    markup_competition_extra
from bot.keyboards.reply import start_kb_markup


from bot.utils.misc import determine_uniqueness


class UpdLink(StatesGroup):
    waiting_link = State()


# async def start(message: Message):
#     increment_button_counter("start")
#
#     keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     button = types.KeyboardButton("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", request_contact=True)
#     keyboard.add(button)
#
#     text = "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º."
#     await message.answer(text, reply_markup=keyboard)


async def service(message: Message):
    increment_button_counter("service")

    video = types.InputFile('bot/images/IMG_6456.MOV')
    await message.answer_video(caption=f'–ú—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ —Å–ª–µ–¥–∏–º –∑–∞ –∫–∞—á–µ—Å—Ç–≤–æ–º –ø–æ—à–∏–≤–∞ –Ω–∞—à–∏—Ö –∏–∑–¥–µ–ª–∏–π. \n\
–ò –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã —Ç–≤–æ–µ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∫–æ–º–ø–ª–µ–∫—Ç—ã –µ—â—ë –ª—É—á—à–µ!üî•  \n\
–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ù–∞–π–¥–∏ –æ—Ç–≤–µ—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤ ‚ÄúFAQ‚Äù –∏–ª–∏ —Å–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏',
            reply_markup=markup_lk,
            video=video,
            width=960, height=1460)


async def about_us(message: Message):
    increment_button_counter("about_us")

    video = types.InputFile('bot/images/letnee_video.mp4')

    await message.answer_video(
        caption=
'–ò—Å–∫—Ä–µ–Ω–Ω–µ –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–µ–≥–æ –±—Ä–µ–Ω–¥–∞.\n\
MissYourKiss\n\
- —ç—Ç–æ –Ω–∏–∂–Ω–µ–µ –±–µ–ª—å–µ, –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –∏ –∫—É–ø–∞–ª—å–Ω–∏–∫–∏\n\
- —ç—Ç–æ —Ä–æ—Å—Å–∏–π—Å–∫–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ\n\
- —ç—Ç–æ —Å–µ–∫—Å—É–∞–ª—å–Ω–æ—Å—Ç—å –∏ —á—É–≤—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –≤ –∫–∞–∂–¥–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏\n\
- —ç—Ç–æ –±—ã—Ç—å –≥–æ—Ç–æ–≤–æ–π –∫ –æ—Å–æ–±–æ–º—É —Å–ª—É—á–∞—é –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç\n\
\n\
[–ú—ã –≤ –Ω–µ–ª—å–∑—è–≥—Ä–∞–º](https://instagram.com/missyourkiss.brand?igshid=MzRlODBiNWFlZA==) \n\
\n\
[–ú—ã –Ω–∞ YouTube](https://www.youtube.com/@missyourkiss)\n\
\n\
[–ú—ã –Ω–∞ Pinterest](https://pin.it/2n7w8Efa9)\n\
',
        video=video,
        # reply_markup=markup_competition,
        parse_mode=types.ParseMode.MARKDOWN)


async def faq_info(callback_query: CallbackQuery):
    bot: Bot = callback_query.bot
    user_id = callback_query.from_user.id
    await bot.send_message(user_id, "–û—Å–Ω–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –∫ –Ω–∏–º\n", reply_markup=faq_kb)


async def start(message: Message):
    increment_button_counter("start")

    user_id = message.from_user.id

    # await message.answer(text=f"–í—ã –ø–æ–¥–µ–ª–∏–ª–∏—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º —Å –Ω–æ–º–µ—Ä–æ–º {phone_number}")
    user_real_name = message.from_user.first_name
    user_second_name = message.from_user.last_name
    user_link_nice = message.from_user.username

    user_id = message.from_user.id
    create_user(user_real_name, user_second_name, user_id, user_link_nice)

    photo = types.InputFile('bot/images/–¥–ª—è –¢–ì.jpg')

    await message.answer_photo(
        caption=f'–ü—Ä–∏–≤–µ—Ç, –º–∏–ª–∞—è! \n–ù–∞ —Å–≤—è–∑–∏ —Ç–≤–æ–π –ª—é–±–∏–º—ã–π –±—Ä–µ–Ω–¥ –Ω–∏–∂–Ω–µ–≥–æ –±–µ–ª—å—è MissYourKiss üíã \n–†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ. –ó–¥–µ—Å—å —Ç—ã —Å–∞–º–æ–π –ø–µ—Ä–≤–æ–π –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –æ —Å–≤–µ–∂–∏—Ö –∫–æ–Ω–∫—É—Ä—Å–∞—Ö, –∞–∫—Ü–∏—è—Ö –∏ –Ω–æ–≤–∏–Ω–∫–∞—Öüòç',
        reply_markup=start_kb_markup, photo=photo)


async def get_gift(callback_query: CallbackQuery):
    gift = types.InputFile('bot/images/Reels –Ω–∞ –º–∏–ª–ª–∏–æ–Ω.pdf')
    await callback_query.message.answer_document(document=gift, caption='–¢–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫ üéÅ')


async def oferta(callback_query: CallbackQuery):
    gift = types.InputFile('bot/images/–ü–æ–ª–æ–∂–µ–Ω–∏–µ.pdf')
    await callback_query.message.answer_document(document=gift, caption='–ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞')


async def problems(callback_query: CallbackQuery):
    bot: Bot = callback_query.bot
    user_id = callback_query.from_user.id
    await bot.send_message(user_id, "–û—Å–Ω–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–æ–≤–∞—Ä–∞–º –∏ –æ—Ç–≤–µ—Ç—ã –∫ –Ω–∏–º\n", reply_markup=problems_kb)


async def wa_link(callback_query: CallbackQuery):
    # await callback_query.answer('link link link\n'
    #                             'link link link\n'
    #                             'link link link')
    bot: Bot = callback_query.bot
    user_id = callback_query.from_user.id
    await bot.send_message(user_id, "–ü—Ä–µ–∂–¥–µ –≤—Å–µ–≥–æ, —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –≤ —Å–≤–æ—ë–º –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏, –¥–æ–ø—É—Å–∫–∞–µ—Ç –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤, –ø–æ—Ä–∞–∂–∞—é—â–∏—Ö –ø–æ —Å–≤–æ–µ–π –º–∞—Å—à—Ç–∞–±–Ω–æ—Å—Ç–∏ –∏ –≥—Ä–∞–Ω–¥–∏–æ–∑–Ω–æ—Å—Ç–∏.\n")


async def competition_link(callback_query: CallbackQuery):
    # await callback_query.answer('link link link\n'
    #                             'link link link\n'
    #                             'link link link')
    bot: Bot = callback_query.bot
    user_id = callback_query.from_user.id
    if check_link(user_id):
        await callback_query.message.answer("–í—ã —É–∂–µ –≤–≤–æ–¥–∏–ª–∏ —Å—Å—ã–ª–∫—É, —Ö–æ—Ç–∏—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å?\n", reply_markup=markup_link) # –¢–£–¢ –î–û–ë–ê–í–ò–¢–¨ –ö–õ–ê–í–ò–ê–¢–£–†–£ (–•–û–¢–òT–ï/–ù–ï –•–û–¢–ò–¢–ï?)
    else:
        await UpdLink.waiting_link.set()
        await callback_query.message.answer("–û—Ç–ø—Ä–∞–≤–ª—è—è —Å—Å—ã–ª–∫—É –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –µ–≥–æ –≤ –ª–∏—á–Ω—ã—Ö —Ü–µ–ª—è—Ö –±—Ä–µ–Ω–¥–∞.\n\
\n\
–ö–æ–Ω—Ç–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —ç—Ç–∏—á–Ω—ã–º.\n\
–í–∏–¥–µ–æ —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –ø–æ—à–ª–æ—Å—Ç—å, –Ω–∞—Å–∏–ª–∏–µ - –≤–Ω–µ –∫–æ–Ω–∫—É—Ä—Å–∞.\n")


async def update_link(callback_query: CallbackQuery):
    await UpdLink.waiting_link.set()
    await callback_query.message.answer("–û—Ç–ø—Ä–∞–≤–ª—è—è —Å—Å—ã–ª–∫—É –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –µ–≥–æ –≤ –ª–∏—á–Ω—ã—Ö —Ü–µ–ª—è—Ö –±—Ä–µ–Ω–¥–∞.\n\
\n\
–ö–æ–Ω—Ç–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —ç—Ç–∏—á–Ω—ã–º.\n\
–í–∏–¥–µ–æ —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –ø–æ—à–ª–æ—Å—Ç—å, –Ω–∞—Å–∏–ª–∏–µ - –≤–Ω–µ –∫–æ–Ω–∫—É—Ä—Å–∞.\n")


async def competition_full_info(callback_query: CallbackQuery):
    video = types.InputFile('bot/images/IMG_6433.MOV')
    await callback_query.message.answer_video(caption="–ö–æ–Ω–∫—É—Ä—Å –ø—Ä–æ–π–¥–µ—Ç –≤ 2 —ç—Ç–∞–ø–∞:\n\
\n\
–ü–ï–†–í–´–ô –≠–¢–ê–ü (14.11.2023-20.12.2023)\n\
\n\
1)[–ó–∞–∫–∞–∑–∞—Ç—å –Ω–∞ –í–ë](https://www.wildberries.ru/brands/missyourkiss ) –ø–æ–Ω—Ä–∞–≤–∏–≤—à–µ–µ—Å—è —Ç–µ–±–µ –±–µ–ª—å–µ.\n\
2) –ü—Ä–∏–¥—É–º–∞—Ç—å –∫–ª–∞—Å—Å–Ω—É—é –∏–¥–µ—é –∏ —Å–Ω—è—Ç—å —Ä–∏–ª—Å –≤ –Ω–∞—à–µ–º –±–µ–ª—å–µ.\n\
3) –í–ê–ñ–ù–û: –í—ã–∫–ª–∞–¥—ã–≤–∞—è —Ä–∏–ª—Å, –Ω–µ –∑–∞–±—É–¥—å —É–∫–∞–∑–∞—Ç—å –∞—Ä—Ç–∏–∫—É–ª —Ç–≤–æ–µ–≥–æ –∫–æ–º–ø–ª–µ–∫—Ç–∞ üòâ\n\
4) –û–ø—É–±–ª–∏–∫—É–π –≤–∏–¥–µ–æ –≤ inst. \n\
5) –°–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É —Ç–≤–æ–µ–≥–æ —Ä–∏–ª—Å –∏ –æ—Ç–ø—Ä–∞–≤—å –µ–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É¬ª, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ\n\
\n\
–í–¢–û–†–û–ô –≠–¢–ê–ü. \n\
(20.12.2023 - 30.12.2023)\n\
\n\
–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –≤—ã–±–∏—Ä–∞–µ—Ç 5 —Å–∞–º—ã—Ö –∫—Ä–∞—Å–∏–≤—ã—Ö –∏ —ç—Å—Ç–µ—Ç–∏—á–Ω—ã—Ö —Ä–∏–ª—Å —Å —Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º–∏ –∏ –ø—É–±–ª–∏–∫—É–µ—Ç –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º [–±–ª–æ–≥–µ –±—Ä–µ–Ω–¥–∞](https://instagram.com/missyourkiss.brand?igshid=MzMyNGUyNmU2YQ==)  , –≥–¥–µ —Å–æ–≤–º–µ—Å—Ç–Ω–æ —Å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏ –º—ã –≤—ã–±–∏—Ä–∞–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∫–æ–Ω–∫—É—Ä—Å–∞ –∏ –æ–¥–Ω–æ —Å–∞–º–æ–µ –ª—É—á—à–µ–µ –≤–∏–¥–µ–æ —Å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º–∏ –Ω–∞ –º–∏–ª–ª–∏–æ–Ω. –ò –µ–≥–æ –æ–±–ª–∞–¥–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤–µ–Ω—å–∫–∏–π –∞–π—Ñ–æ–Ω 15!\n\
\n\
P.S. –ê —á—Ç–æ–±—ã —Ç–≤–æ–π —Ä–∏–ª—Å –∑–∞–ª–µ—Ç–µ–ª –Ω–∞ –º–∏–ª–ª–∏–æ–Ω—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, –∫–æ–º–∞–Ω–¥–∞ –Ω–∞—à–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ —Å–æ–±—Ä–∞–ª–∞ –≥–∞–π–¥ ¬´Reels –Ω–∞ –º–∏–ª–ª–∏–æ–Ω¬ª —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –≤ –ø–æ–¥–∞—Ä–æ–∫!\n\
", video=video, reply_markup=markup_competition_extra,  parse_mode=types.ParseMode.MARKDOWN)


async def get_link(message: Message, state: FSMContext):
    user_id = message.from_user.id
    user_link = message.from_user.url
    user_link_nice = message.from_user.username
    link = message.text
    unique = determine_uniqueness(link)
    print(link)
    if link[0:30] == 'https://www.instagram.com/reel' and unique:
        upd_link(user_id, link)
        await message.answer(f'–°—Å—ã–ª–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞', reply_markup=start_kb_markup)
        await state.finish()
    elif link[0:30] != 'https://www.instagram.com/reel':
        # print(user_link, user_link_nice)
        # upd_link(user_id, link)
        await message.answer(f'–°—Å—ã–ª–∫–∞ –Ω–µ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Instagram', reply_markup=start_kb_markup)
        await state.finish()
    elif not unique:
        await message.answer(f'–î–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –∫–æ–Ω–∫—É—Ä—Å–µ', reply_markup=start_kb_markup)
        await state.finish()


async def our_shop_link(message: Message):
    increment_button_counter("our_shop_link")

    photo = types.InputFile('bot/images/wb_ozon.png')
    text_with_link = "–ë–ª–∞–≥–æ–¥–∞—Ä—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—é –Ω–∞ –æ–Ω–ª–∞–π–Ω-–ø–ª–æ—â–∞–¥–∫–∞—Ö —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–æ–≥–∏—Å—Ç–∏–∫–æ–π –º—ã –º–æ–∂–µ–º –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Å–∞–º—ã–µ –ø—Ä–∏—è—Ç–Ω—ã–µ —Ü–µ–Ω—ã –∏ –¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏"

    await message.answer_photo(caption=text_with_link, photo=photo, parse_mode=types.ParseMode.MARKDOWN, reply_markup=shop_kb)


async def ready_present(message: types.Message):
    increment_button_counter("ready_present")

    video_path = 'bot/images/IMG_9221.MOV'

    text_with_link = "–ú—ã –æ–±–æ –≤—Å–µ–º –ø–æ–∑–∞–±–æ—Ç–∏–ª–∏—Å—å –∏ —Å–æ–±—Ä–∞–ª–∏ –ø–æ–¥–∞—Ä–æ—á–Ω—ã–µ –±–æ–∫—Å—ã!! üéÅ \n\
–î–∞—Ä–∏ —Å–∞–º—ã–º –±–ª–∏–∑–∫–∏–º —Ç–æ–ª—å–∫–æ –ª—É—á—à–µ–µ –±–µ–ª—å—ë –æ—Ç MissYourKiss üíã \n\
–ü–µ—Ä–µ—Ö–æ–¥–∏ –∏ –≤—ã–±–∏—Ä–∞–π  ‚¨áÔ∏è \n\
\n\
\n\
–°—Ç—Ä–∞—Å—Ç–Ω—ã–π –∫—Ä–∞—Å–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç\n\
–ê—Ä—Ç–∏–∫—É–ª: [196719351](https://missyourkiss.mobz.click/radmyk)\n\
\n\
–ß—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—É–¥—Ä–æ–≤—ã–π –∫–æ–º–ø–ª–µ–∫—Ç\n\
–ê—Ä—Ç–∏–∫—É–ª: [196717464](https://missyourkiss.mobz.click/pudramyk)\n\
\n\
–ò–Ω—Ç—Ä–∏–≥—É—é—â–∏–π —á—ë—Ä–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç\n\
–ê—Ä—Ç–∏–∫—É–ª: [196720365](https://missyourkiss.mobz.click/blackmyk)\n\
\n\
–ß—ë—Ä–Ω—ã–µ —Ç—Ä—É—Å–∏–∫–∏ –≤ –ø–æ–¥–∞—Ä–æ—á–Ω–æ–º –º–µ—à–æ—á–∫–µ\n\
–ê—Ä—Ç–∏–∫—É–ª: [196691686](https://missyourkiss.mobz.click/drblackmyk)\n\
\n\
–ü—É–¥—Ä–æ–≤—ã–µ —Ç—Ä—É—Å–∏–∫–∏ –≤ –ø–æ–¥–∞—Ä–æ—á–Ω–æ–º –º–µ—à–æ—á–∫–µ\n\
–ê—Ä—Ç–∏–∫—É–ª: [196692315](https://missyourkiss.mobz.click/drpudramyk)\n\
"

    await message.bot.send_video(
        chat_id=message.chat.id,
        caption=text_with_link,
        video=open(video_path, 'rb'),
        parse_mode=types.ParseMode.MARKDOWN
    )


async def shocking_price(message: Message):
    increment_button_counter("shocking_price")

    photo = types.InputFile('bot/images/kupalnik.jpg')

    text_with_link = "–°–∞–º—ã–µ —è—Ä–∫–∏–µ –ª–µ—Ç–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Ç—ã –ø–æ —Å–∞–º—ã–º –≤–∫—É—Å–Ω—ã–º —Ü–µ–Ω–∞–º. –ë—É–¥—å —è—Ä–∫–æ–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –ø–µ—Ä–µ—Ö–æ–¥–∏ –∏ –≤—ã–±–∏—Ä–∞–π \n\
\n\
\n\
–ù–∞—à TOP –±–∏–∫–∏–Ω–∏ –∫—É–ø–∞–ª—å–Ω–∏–∫ TIGER üî•\n\
–ê—Ä—Ç–∏–∫—É–ª: [218272630](https://www.wildberries.ru/catalog/218272630/detail.aspx?targetUrlBP)\n\
\n\
–ß–µ—Ä–Ω—ã–π –±–∏–∫–∏–Ω–∏ –∫—É–ø–∞–ª—å–Ω–∏–∫\n\
–ê—Ä—Ç–∏–∫—É–ª: [218272629](https://www.wildberries.ru/catalog/218272629/detail.aspx?targetUrlBP)\n\
\n\
–¢—É–Ω–∏–∫–∞ –ø–ª—è–∂–Ω–∞—è\n\
–ê—Ä—Ç–∏–∫—É–ª: [226609836](https://www.wildberries.ru/catalog/226609836/detail.aspx?targetUrl=BP)\n\
\n\
–ö—Ä–æ–ø —Ç–æ–ø –ø–ª—è–∂–Ω—ã–π\n\
–ê—Ä—Ç–∏–∫—É–ª: [158417968](https://www.wildberries.ru/catalog/158417968/detail.aspx?targetUrl=BP)"

    await message.answer_photo(caption=text_with_link, photo=photo, parse_mode=types.ParseMode.MARKDOWN)


bot_token = getenv("BOT_TOKEN")
if not bot_token:
    exit("Error: no token provided")
bot = Bot(token=bot_token, parse_mode="HTML")


async def send_broadcast_with_media_group(photo_paths, message_text):
    subscribers = get_all_user_ids()

    photo_path1 = 'bot/images/img_10.png'

    blocked_users = 0
    successful_sends = 0

#
    text_with_link = "–í–ø–µ—Ä–µ–¥–∏ –±–∞—Ä—Ö–∞—Ç–Ω—ã–π —Å–µ–∑–æ–Ωüåä\n\
\n\
–ò –º—ã —Ö–æ—Ç–µ–ª–∏ –Ω–∞–ø–æ–º–Ω–∏—Ç—å —Ç–µ–±–µ –æ –Ω–∞—à–µ–π –ª–µ—Ç–Ω–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏:\n\
\n\
–ö—É–ø–∞–ª—å–Ω–∏–∫ tiger\n\
–ê—Ä—Ç–∏–∫—É–ª: <a href='https://www.wildberries.ru/catalog/218272630/detail.aspx?targetUrl=MS'>218272630</a>\n\
\n\
–ß–µ—Ä–Ω—ã–π –∫—É–ø–∞–ª—å–Ω–∏–∫\n\
–ê—Ä—Ç–∏–∫—É–ª: <a href='https://www.wildberries.ru/catalog/218272629/detail.aspx?targetUrl=MS'>218272629</a>\n\
\n\
–ö–ª–∞—Å—Å–Ω—ã–µ –∫—Ä–æ–ø —Ç–æ–ø—ã:\n\
–ê—Ä—Ç–∏–∫—É–ª: <a href='https://www.wildberries.ru/catalog/158417968/detail.aspx?targetUrl=MS'>158417968</a>\n\
\n\
–°–µ—Ç—á–∞—Ç—ã–µ –±—Ä—é–∫–∏:\n\
–ê—Ä—Ç–∏–∫—É–ª: <a href='https://www.wildberries.ru/catalog/228738081/detail.aspx?targetUrl=MS'>228738081</a>\n\
\n\
–ë–µ—Å–ø–æ–¥–æ–±–Ω—ã–µ —Ç—É–Ω–∏–∫–∏:\n\
–ê—Ä—Ç–∏–∫—É–ª: <a href='https://www.wildberries.ru/catalog/226609836/detail.aspx?targetUrl=MS'>226609836</a>"

    for subscriber_id in subscribers:
        try:
            await bot.send_photo(subscriber_id, photo=types.InputFile(photo_path1), caption=text_with_link,
                                 parse_mode=types.ParseMode.HTML, reply_markup=start_kb_markup)
            successful_sends += 1
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫—É {subscriber_id}: {str(e)}")
            blocked_users += 1

    insert_broadcast_stats(blocked_users, successful_sends)


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏ —Å –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø–æ–π
async def on_broadcast_media_group_command(message: Message):
    photo_paths = ['bot/images/shok_cena.jpg', 'bot/images/shok_cena.jpg', 'bot/images/shok_cena.jpg']
    message_text = '–¢–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç \n' \
                   '—Ç–µ–∫—Å—Ç –Ω–∞ –¥—Ä—É–≥–æ–π —Å—Ç—Ä–æ–∫–µ'
    await send_broadcast_with_media_group(photo_paths, message_text)


async def broadcast_command(message: Message):
    user_id = message.from_user.id
    if user_id == 615742233:
        await on_broadcast_media_group_command(message)
    else:
        await message.answer(text='–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º')


async def send_file(callback_query: CallbackQuery):
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –µ–≥–æ –ø—É—Ç–∏
    file_path = 'bot/images/Reels –Ω–∞ –º–∏–ª–ª–∏–æ–Ω.pdf'  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É —Ñ–∞–π–ª—É

    await callback_query.message.answer_document(open(file_path, "rb"))


# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è poll_id –≤—Ç–æ—Ä–æ–≥–æ –æ–ø—Ä–æ—Å–∞
user_poll_data = {}


async def send_quiz(message: types.Message):
    question = "–ü—Ä–∏–≤–µ—Ç!üëãüèª \n–ë—ã–ª–æ —É —Ç–µ–±—è —Ç–∞–∫–æ–µ, —á—Ç–æ —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ –∏ –Ω–µ –∑–Ω–∞–µ—à—å –∫–∞–∫–æ–π –∫–æ–º–ø–ª–µ–∫—Ç –±–µ–ª—å—è –≤—ã–±—Ä–∞—Ç—å?"
    options = ["–î–∞", "–ù–µ—Ç"]
    subscribers = get_all_user_ids()
    photo_path = 'bot/images/quiz1.png'

    sent_messages = 0
    successful_sends = 0
    failed_sends = 0

    for subscriber_id in subscribers:
        try:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
            await bot.send_photo(
                chat_id=subscriber_id,
                photo=types.InputFile(photo_path),
                caption=""
            )
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø—Ä–æ—Å–∞
            await bot.send_poll(
                chat_id=subscriber_id,
                question=question,
                options=options,
                is_anonymous=False,
                type='regular'  # –ò–∑–º–µ–Ω–µ–Ω –Ω–∞ 'regular', —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
            )
            successful_sends += 1
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫—É {subscriber_id}: {str(e)}")
            failed_sends += 1
        finally:
            sent_messages += 1

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Å—ã–ª–∫–∏ –≤ MongoDB
    insert_quiz_stats(sent_messages, successful_sends, failed_sends)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    await message.reply(f"–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {successful_sends}, –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å: {failed_sends} –∏–∑ {sent_messages}.")


async def handle_poll_answer(poll_answer: types.PollAnswer):
    user_id = poll_answer.user.id
    answer_ids = poll_answer.option_ids
    poll_id = poll_answer.poll_id

    if poll_id not in user_poll_data:
        if 0 in answer_ids:  # –î–∞
            answer = "–î–∞"
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º
            await bot.send_photo(
                chat_id=user_id,
                photo=types.InputFile('bot/images/karty.png'),
                caption="",
                parse_mode=types.ParseMode.MARKDOWN
            )
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ –æ–ø—Ä–æ—Å–∞
            poll_message = await bot.send_poll(
                chat_id=user_id,
                question="–¢—è–Ω–∏ –∫–∞—Ä—Ç—É",
                options=["–ü–µ—Ä–≤–∞—è", "–í—Ç–æ—Ä–∞—è", "–¢—Ä–µ—Ç—å—è"],
                is_anonymous=False,
                type='regular'
            )
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ID –≤—Ç–æ—Ä–æ–≥–æ –æ–ø—Ä–æ—Å–∞
            user_poll_data[poll_message.poll.id] = user_id
        else:
            answer = "–ù–µ—Ç"
            await bot.send_message(
                user_id,
                "–≠—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ! –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ç–µ–±–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–µ–π –ª–µ—Ç–Ω–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π:\n\n"
                "–ù–∞—à TOP –±–∏–∫–∏–Ω–∏ –∫—É–ø–∞–ª—å–Ω–∏–∫ TIGER üî•\n"
                "–ê—Ä—Ç–∏–∫—É–ª: [218272630](https://www.wildberries.ru/catalog/218272630/detail.aspx?targetUrl=MS)\n\n"
                "–ß–µ—Ä–Ω—ã–π –±–∏–∫–∏–Ω–∏ –∫—É–ø–∞–ª—å–Ω–∏–∫\n"
                "–ê—Ä—Ç–∏–∫—É–ª: [218272629](https://www.wildberries.ru/catalog/218272629/detail.aspx?targetUrl=MS)\n\n"
                "–¢—É–Ω–∏–∫–∞ –ø–ª—è–∂–Ω–∞—è\n"
                "–ê—Ä—Ç–∏–∫—É–ª: [226609837](https://www.wildberries.ru/catalog/226609837/detail.aspx?targetUrl=MS)\n\n"
                "–ö—Ä–æ–ø —Ç–æ–ø –ø–ª—è–∂–Ω—ã–π\n"
                "–ê—Ä—Ç–∏–∫—É–ª: [168812229](https://www.wildberries.ru/catalog/168812299/detail.aspx?targetUrl=MS)",
                parse_mode=types.ParseMode.MARKDOWN
            )
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –≤ MongoDB
        insert_poll_response(user_id, poll_answer.poll_id, answer)
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        poll_responses_yes, poll_responses_no = update_poll_statistics()
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É (–ø—Ä–∏–º–µ—Ä)
        admin_id = 615742233  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await bot.send_message(
            admin_id,
            f"–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø—Ä–æ—Å–∞:\n–î–∞: {poll_responses_yes}\n–ù–µ—Ç: {poll_responses_no}",
            parse_mode=types.ParseMode.MARKDOWN
        )
    else:
        second_poll_id = poll_id

        if poll_id != second_poll_id:
            return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ –¥—Ä—É–≥–∏–µ –æ–ø—Ä–æ—Å—ã

        if 0 in answer_ids:
            answer = "1"
            photo_path = 'bot/images/first_card.png'
            message_text = "–ù–µ–∂–Ω—ã–π –∏ –º–∏–ª—ã–π –∫–æ–º–ø–ª–µ–∫—Ç\n\n"\
                           "–ê—Ä—Ç–∏–∫—É–ª: [171221030](https://www.wildberries.ru/catalog/171221030/detail.aspx?targetUrl=MS)\n\n"
        elif 1 in answer_ids:
            answer = "2"
            photo_path = 'bot/images/second_card.png'
            message_text = "–Ø—Ä–∫–∏–π –∏ –≤—ã–∑—ã–≤–∞—é—â–∏–π –∫–æ–º–ø–ª–µ–∫—Ç\n\n"\
                           "–ê—Ä—Ç–∏–∫—É–ª: [133525956](https://www.wildberries.ru/catalog/133525956/detail.aspx?targetUrl=MS)\n\n"
        elif 2 in answer_ids:
            answer = "3"
            photo_path = 'bot/images/third_card.png'
            message_text = "–ö–æ–º–ø–ª–µ–∫—Ç —Å –ø—Ä–∏–Ω—Ç–æ–º tiger\n\n"\
                           "–ê—Ä—Ç–∏–∫—É–ª: [177933330](https://www.wildberries.ru/catalog/177933330/detail.aspx?targetUrl=MS)\n\n"
        else:
            answer = "Unknown"
            photo_path = None
            message_text = "–í–∞—à –≤—ã–±–æ—Ä –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."

        if photo_path:
            await bot.send_photo(
                chat_id=user_id,
                photo=types.InputFile(photo_path),
                caption=message_text,
                parse_mode=types.ParseMode.MARKDOWN
            )
        else:
            await bot.send_message(
                chat_id=user_id,
                text=message_text,
                parse_mode=types.ParseMode.MARKDOWN
            )

        # –£–¥–∞–ª–µ–Ω–∏–µ ID –≤—Ç–æ—Ä–æ–≥–æ –æ–ø—Ä–æ—Å–∞ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
        del user_poll_data[poll_id]


def register_users_handlers(dp: Dispatcher) -> None:
    dp.register_message_handler(start, commands=["start"])
    dp.register_message_handler(broadcast_command, commands=["broadcast"])
    dp.register_message_handler(service, content_types=['text'], text="–°–ª—É–∂–±–∞ –∑–∞–±–æ—Ç—ã")

    dp.register_message_handler(send_quiz, commands=["quiz"])
    dp.register_poll_answer_handler(handle_poll_answer)

    dp.register_message_handler(shocking_price, content_types=['text'], text="–ü–ª—è–∂–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è")
    dp.register_message_handler(ready_present, content_types=['text'], text="–ì–æ—Ç–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫")
    dp.register_message_handler(our_shop_link, content_types=['text'], text="–ö–∞—Ç–∞–ª–æ–≥ –±—Ä–µ–Ω–¥–∞")
    dp.register_message_handler(about_us, content_types=['text'], text="–û –Ω–∞—Å")

    dp.register_callback_query_handler(faq_info, lambda c: c.data == 'faq')
    dp.register_callback_query_handler(get_gift, lambda c: c.data == 'get_gift')
    dp.register_callback_query_handler(oferta, lambda c: c.data == 'oferta')
    dp.register_callback_query_handler(problems, lambda c: c.data == 'problems')
    dp.register_callback_query_handler(update_link, lambda c: c.data == 'reels_link_upd')
    dp.register_callback_query_handler(competition_full_info, lambda c: c.data == 'competition_full_info')
    dp.register_callback_query_handler(wa_link, lambda c: c.data == 'wa_link')
    dp.register_callback_query_handler(competition_link, lambda c: c.data == 'reels_link')
    dp.register_callback_query_handler(send_file, lambda c: c.data == 'get_a_guide')

    dp.register_message_handler(get_link, state=UpdLink.waiting_link)
